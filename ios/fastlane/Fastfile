# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.53.1"

default_platform :ios

platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
    cocoapods
    
  end

  desc "Runs all the tests"
  lane :test do
    scan
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta do
    match(type: "appstore",
          app_identifier: 'com.workspace.app') # more information: https://codesigning.guide

    version = get_version_number
    # build_number = get_build_number

    increment_build_number(
      build_number: latest_testflight_build_number(version: version) + 1,
      xcodeproj: "workspace.xcodeproj"
    )
    # increment_build_number(xcodeproj: "workspace.xcodeproj")
    
    gym(scheme: "workspace",
        include_bitcode: true,
        export_xcargs: "-allowProvisioningUpdates") # Build your app - more options available

    testflight
    pilot

    # sh "your_script.sh"
    # You can also use other beta testing services here (run `fastlane actions`)
  end











  lane :install do
    get_certificates           # invokes cert
    get_provisioning_profile   # invokes sigh
    build_app

    install_on_device    
  end










  desc "Fetches the provisioning profiles so you can build locally and deploy to your device"
  lane :certs do
    match(app_identifier: "com.workspace.app", type: "development")
    match(app_identifier: "com.workspace.app", type: "appstore")
  end












  lane :build do

    
    build_app(
      export_method: "development",
      scheme: "workspace",
      include_bitcode: true,
      export_options: {
        provisioningProfiles: { 
          "com.workspace.app" => "match Development com.workspace.app",
        }
      }      
    )

    # version = get_version_number
    # build_number = get_build_number

    # increment_build_number(
    #   # build_number: latest_testflight_build_number(version: version) + 1,
    #   xcodeproj: "workspace.xcodeproj"
    # )
    # increment_build_number(xcodeproj: "workspace.xcodeproj")

    # match(type: "appstore",
    #       app_identifier: 'com.workspace.app') # more information: https://codesigning.guide
    
    # gym(scheme: "workspace",
    #     include_bitcode: true,
    #     export_xcargs: "-allowProvisioningUpdates") # Build your app - more options available

    install_on_device(
      device_id: "c89bf82150832a3ee8e080ac335fa8c010d37304",
      ipa: "./Workspace.ipa",
      skip_wifi: true
    )

    # testflight
    # pilot

    # sh "your_script.sh"
    # You can also use other beta testing services here (run `fastlane actions`)
  end



  desc "Deploy a new version to the App Store"
  lane :release do
    match(type: "appstore")
    # snapshot
    gym(scheme: "workspace",
        include_bitcode: true,
        export_xcargs: "-allowProvisioningUpdates") # Build your app - more options available
    deliver(force: true)
    # frameit
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://docs.fastlane.tools/actions

# fastlane reports which actions are used. No personal data is recorded. 
# Learn more at https://github.com/fastlane/fastlane#metrics
